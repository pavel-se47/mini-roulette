{"version":3,"file":"static/js/game-page.6b09a441.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/GamePage/GamePage.module.css?cceb","components/GamePage/GamePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gameField\":\"GamePage_gameField__X+90x\",\"groupZone\":\"GamePage_groupZone__IWmwc\",\"greenZone\":\"GamePage_greenZone__fTnM8\",\"redZone\":\"GamePage_redZone__KBpkb\",\"blackZone\":\"GamePage_blackZone__IY961\",\"allBlackZone\":\"GamePage_allBlackZone__I-x-q\",\"allRedZone\":\"GamePage_allRedZone__L4dhI\",\"container\":\"GamePage_container__ciyGO\",\"label\":\"GamePage_label__hVPUW\",\"value\":\"GamePage_value__X89Yq\",\"input\":\"GamePage_input__Gccrs\",\"startGame\":\"GamePage_startGame__QEhAW\",\"valueWheel\":\"GamePage_valueWheel__TYyRb\",\"green\":\"GamePage_green__Ri5Wd\"};","import React, { useState, useEffect } from 'react';\nimport styles from './GamePage.module.css';\n\nimport { alert, info, error, success, defaultModules } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport * as PNotifyMobile from '@pnotify/mobile';\nimport '@pnotify/mobile/dist/PNotifyMobile.css';\nimport '@pnotify/core/dist/BrightTheme.css';\n\ndefaultModules.set(PNotifyMobile, {});\n\nexport default function GamePage() {\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState('');\n  const [valueWheel, setValueWheel] = useState(null);\n  const [valueChip, setValueChip] = useState([]);\n  const [win, setWin] = useState(0);\n\n  // const spinButton = document.getElementById('spin');\n  const valueObjectChip = valueChip.map(object => object.value);\n  const colorObjectChip = valueChip.map(object => object.color);\n\n  useEffect(() => {\n    if (!valueWheel) {\n      return;\n    }\n\n    if (valueObjectChip.includes('All black')) {\n      if (valueWheel.color === 'black') {\n        if (colorObjectChip.includes(valueWheel?.color.toString())) {\n          setBalance(balance + bet * 2);\n          setWin(bet * 2);\n          success({\n            title: 'Congratulations! You Win!',\n            text: `You win ${bet * 2} credits!`,\n            delay: 1000,\n            hide: true,\n            width: '400px',\n          });\n          if (valueObjectChip.includes(valueWheel?.value.toString())) {\n            setBalance(balance + bet * 8);\n            setWin(bet * 8);\n            success({\n              title: 'Congratulations! You Win!',\n              text: `You win ${bet * 8} credits!`,\n              delay: 1000,\n              hide: true,\n              width: '400px',\n            });\n          }\n          return;\n        }\n        setBalance(balance - bet);\n        setWin(0);\n        error({\n          title: 'Sorry, you lost :(',\n          text: `You lost ${bet} credits!`,\n          delay: 1000,\n          hide: true,\n          width: '400px',\n        });\n        return;\n      }\n    }\n\n    if (valueObjectChip.includes('All red')) {\n      if (valueWheel.color === 'red') {\n        if (colorObjectChip.includes(valueWheel?.color.toString())) {\n          setBalance(balance + bet * 2);\n          setWin(bet * 2);\n          success({\n            title: 'Congratulations! You Win!',\n            text: `You win ${bet * 2} credits!`,\n            delay: 1000,\n            hide: true,\n            width: '400px',\n          });\n          if (valueObjectChip.includes(valueWheel?.value.toString())) {\n            setBalance(balance + bet * 8);\n            setWin(bet * 8);\n            success({\n              title: 'Congratulations! You Win!',\n              text: `You win ${bet * 8} credits!`,\n              delay: 1000,\n              hide: true,\n              width: '400px',\n            });\n          }\n          return;\n        }\n        setBalance(balance - bet);\n        setWin(0);\n        error({\n          title: 'Sorry, you lost :(',\n          text: `You lost ${bet} credits!`,\n          delay: 1000,\n          hide: true,\n          width: '400px',\n        });\n        return;\n      }\n    }\n\n    if (!valueObjectChip.includes(valueWheel?.value.toString())) {\n      setBalance(balance - bet);\n      setWin(0);\n      error({\n        title: 'Sorry, you lost :(',\n        text: `You lost ${bet} credits!`,\n        delay: 1000,\n        hide: true,\n        width: '400px',\n      });\n    } else {\n      setBalance(balance + bet * 8);\n      setWin(bet * 8);\n      success({\n        title: 'Congratulations! You Win!',\n        text: `You win ${bet * 8} credits!`,\n        delay: 1000,\n        hide: true,\n        width: '400px',\n      });\n      return;\n    }\n\n    // spinButton.disabled = false;\n    // eslint-disable-next-line\n  }, [valueWheel]);\n\n  const betChange = e => {\n    setBet(Number(e.currentTarget.value));\n  };\n\n  const onSetChip = e => {\n    if (valueObjectChip.includes(e.target.innerText)) {\n      alert({\n        title: 'You have already placed a bet on this zone!',\n        delay: 1000,\n        hide: true,\n        width: '400px',\n      });\n      return;\n    }\n    setValueChip(prevValueChip => [\n      ...prevValueChip,\n      { value: e.target.innerText, color: e.target.id },\n    ]);\n    setValueWheel(null);\n  };\n\n  const valueChipToString = valueChip.map(object => object.value).join(', ');\n\n  const spin = () => {\n    if (balance === 0) {\n      alert({\n        title: 'Top up your balance to continue playing!',\n        delay: 1000,\n        hide: true,\n        width: '400px',\n      });\n      return;\n    }\n\n    if (balance < bet) {\n      alert({\n        title: 'Not enough funds to bet!',\n        delay: 1000,\n        hide: true,\n        width: '400px',\n      });\n      setBet(0);\n      return;\n    }\n\n    if (!bet) {\n      info({\n        title: 'Place your bet!',\n        delay: 1000,\n        hide: true,\n        width: '400px',\n      });\n      return;\n    }\n\n    if (!valueChip.length) {\n      info({\n        title: 'Place your chip!',\n        delay: 1000,\n        hide: true,\n        width: '400px',\n      });\n      return;\n    }\n\n    // spinButton.disabled = true;\n    // setValueWheel(Math.floor(Math.random() * (9 - 0) + 0).toString());\n\n    const randomNumber = Math.floor(Math.random() * (9 - 0) + 0);\n    if (randomNumber === 0) {\n      setValueWheel({ value: randomNumber, color: 'green' });\n    } else if (\n      randomNumber === 3 ||\n      randomNumber === 4 ||\n      randomNumber === 8 ||\n      randomNumber === 7\n    ) {\n      setValueWheel({ value: randomNumber, color: 'red' });\n    } else if (\n      randomNumber === 1 ||\n      randomNumber === 2 ||\n      randomNumber === 5 ||\n      randomNumber === 6\n    ) {\n      setValueWheel({ value: randomNumber, color: 'black' });\n    }\n  };\n\n  const clearChip = () => {\n    setValueChip([]);\n    setValueWheel(null);\n  };\n\n  // console.log(valueWheel?.value);\n  // console.log(valueWheel);\n  // console.log(valueChip);\n  // console.log(colorObjectChip);\n\n  return (\n    <>\n      <div className={styles.valueWheel}>{valueWheel?.value}</div>\n\n      <button className={styles.startGame} id=\"spin\" onClick={spin}>\n        SPIN\n      </button>\n\n      <div className={styles.container}>\n        <div className={styles.label}>\n          Your balance:\n          <div className={styles.value}>{balance}</div>\n        </div>\n\n        <div className={styles.label}>\n          <label>\n            Your Bet:\n            <input\n              type=\"number\"\n              min={0}\n              name=\"bet\"\n              className={styles.input}\n              value={bet}\n              placeholder=\"Your bet\"\n              onChange={betChange}\n            />\n          </label>\n        </div>\n\n        <div className={styles.label}>\n          Your Chip:\n          <div className={styles.value}>{valueChipToString}</div>\n        </div>\n\n        <div className={styles.label}>\n          Your Win:\n          <div className={styles.value}>{win}</div>\n        </div>\n      </div>\n\n      <button className={styles.startGame} onClick={clearChip}>\n        CLEAR CHIP\n      </button>\n\n      <div className={styles.gameField}>\n        <div className={styles.groupZone}>\n          <div className={styles.greenZone} id=\"green\" onClick={onSetChip}>\n            0\n          </div>\n          <div className={styles.redZone} id=\"red\" onClick={onSetChip}>\n            3\n          </div>\n          <div className={styles.blackZone} id=\"black\" onClick={onSetChip}>\n            1\n          </div>\n        </div>\n        <div className={styles.groupZone}>\n          <div className={styles.redZone} id=\"red\" onClick={onSetChip}>\n            4\n          </div>\n          <div className={styles.blackZone} id=\"black\" onClick={onSetChip}>\n            6\n          </div>\n          <div className={styles.redZone} id=\"red\" onClick={onSetChip}>\n            8\n          </div>\n        </div>\n        <div className={styles.groupZone}>\n          <div className={styles.blackZone} id=\"black\" onClick={onSetChip}>\n            2\n          </div>\n          <div className={styles.redZone} id=\"red\" onClick={onSetChip}>\n            7\n          </div>\n          <div className={styles.blackZone} id=\"black\" onClick={onSetChip}>\n            5\n          </div>\n        </div>\n        <div className={styles.groupZone}>\n          <div className={styles.allBlackZone} id=\"black\" onClick={onSetChip}>\n            All black\n          </div>\n          <div className={styles.allRedZone} id=\"red\" onClick={onSetChip}>\n            All red\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["GamePage","useState","balance","setBalance","bet","setBet","valueWheel","setValueWheel","valueChip","setValueChip","win","setWin","valueObjectChip","map","object","value","colorObjectChip","color","useEffect","includes","toString","success","title","text","delay","hide","width","error","onSetChip","e","target","innerText","alert","prevValueChip","id","valueChipToString","join","className","styles","onClick","length","randomNumber","Math","floor","random","info","type","min","name","placeholder","onChange","Number","currentTarget","defaultModules","PNotifyMobile"],"sourceRoot":""}